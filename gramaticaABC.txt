<S> ::= PROGRAM id nl <SeccionConstantes> nl <SeccionVariables> nl <Rutinas> nl <EntradaPrograma> 

<EntradaPrograma> ::= BEGIN nl <Expresiones> nl END

**** Declaracion de Constantes y Variables ****

<SeccionConstantes> ::= CONST nl <Constantes> 
<SeccionConstantes> ::= epsilon

<Constantes> ::= <Constante> nl <Constantes>
<Constantes> ::= epsilon

<Constante> ::= id = <literal> ;
<Constante> ::= epsilon

<SeccionVariables> ::= VAR nl <Variables>
<SeccionVariables> ::= epsilon

<Variables> ::= <Variable> nl <Variables>
<Variables> ::= epsilon

<Variable> ::= id <Identificadores> : <Tipo> <Inicializar> ;
<Variable> ::= epsilon

<Identificadores> ::= , id <Identificadores>
<Identificadores> ::= epsilon

<Inicializar> ::= = <literal>
<Inicializar> ::= epsilon

**** Rutinas ****

<Rutinas> ::= <Rutina> nl <Rutinas>
<Rutinas> ::= epsilon

<Rutina> ::= <EncabezadoProcedimiento> BEGIN <Expresiones> END
<Rutina> ::= <EncabezadoFuncion> BEGIN <Expresiones> END
<Rutina> ::= epsilon

<EncabezadoProcedimiento> ::= PROCEDURE id ( <Parametros> )
<EncabezadoFuncion> ::= FUNCTION id ( <Parametros> ) : <Tipo>

<Parametros> ::= <Parametro>
<Parametros> ::= epsilon

<Parametro> ::= <Tipo> id <masParametros>
<Parametro> ::= epsilon

<masParametros> ::= , <Tipo> id <masParametros>
<masParametros> ::= epsilon

**** Expresiones ****

<Expresiones> ::= <Expresion> ; nl <Expresiones> 
<Expresiones> ::= epsilon

<Expresion> ::= <Instruccion> ;
<Expresion> ::= <Asignacion> ;
<Expresion> ::= <Operacion> ;
<Expresion> ::= <literal> ;
<Expresion> ::= epsilon

<Instruccion> ::= <IfThenElse>
<Instruccion> ::= <While>
<Instruccion> ::= <For>

<IfThenElse> ::= IF <Expresion> THEN <Expresiones> ELSE <Expresiones> END
<IfThenElse> ::= IF <Expresion> THEN <Expresiones> END

<While> ::= WHILE <Expresion> DO nl BEGIN <Expresiones> END

<For> ::= FOR id := <Expresion> TO <Expresion> DO nl BEGIN <Expresiones> END

<Asignacion> ::= id <OperadorAsignacion> <Expresion> ;

<Operacion> ::= <Expresion> <OperadorBinario> <Expresion>
<Operacion> ::= <OperadorUnarioPrefijo> <Expresion>
<Operacion> ::= <Expresion> <OperadorUnarioPosfijo>

**** Operadores ****

<OperadorBinario> ::= <OperadoresEnteros>
<OperadorBinario> ::= <OperadoresComparacion>
<OperadorBinario> ::= <OperadoresLogicosBinarios>

<OperadorUnarioPrefijo> ::= <OperadoresLogicosUnarios>
<OperadorUnarioPrefijo> ::= <Incremento>
<OperadorUnarioPrefijo> ::= <Decremento>

<OperadorUnarioPosfijo> ::= <Incremento>
<OperadorUnarioPosfijo> ::= <Decremento>

<Incremento> ::= ++
<Decremento> ::= --
 
<OperadoresEnteros> ::= +
<OperadoresEnteros> ::= -
<OperadoresEnteros> ::= *
<OperadoresEnteros> ::= /
<OperadoresEnteros> ::= MOD
<OperadoresEnteros> ::= DIV

<OperadorAsignacion> ::= :=
<OperadorAsignacion> ::= +=
<OperadorAsignacion> ::= -=
<OperadorAsignacion> ::= *=
<OperadorAsignacion> ::= /=

<OperadoresComparacion> ::= =
<OperadoresComparacion> ::= >=
<OperadoresComparacion> ::= >
<OperadoresComparacion> ::= <=
<OperadoresComparacion> ::= <
<OperadoresComparacion> ::= <>

<OperadoresLogicosBinarios> ::= OR
<OperadoresLogicosBinarios> ::= AND

<OperadoresLogicosUnarios> ::= NOT

**** Tipos y Literales ****

<Tipo> ::= BOOLEAN 
<Tipo> ::= INT
<Tipo> ::= CHAR
<Tipo> ::= LONGINT
<Tipo> ::= SHORTINT
<Tipo> ::= STRING
<Tipo> ::= REAL

<literal> ::= literal_entero
<literal> ::= literal_longint
<literal> ::= literal_shortint
<literal> ::= literal_real
<literal> ::= literal_string
<literal> ::= literal_char
<literal> ::= <Boolean>

<Boolean> ::= TRUE
<Boolean> ::= FALSE
